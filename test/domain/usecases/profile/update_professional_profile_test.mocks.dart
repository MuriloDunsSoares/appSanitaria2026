// Mocks generated by Mockito 5.4.6 from annotations
// in app_sanitaria/test/domain/usecases/profile/update_professional_profile_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app_sanitaria/core/error/failures.dart' as _i5;
import 'package:app_sanitaria/domain/entities/patient_entity.dart' as _i6;
import 'package:app_sanitaria/domain/entities/professional_entity.dart' as _i7;
import 'package:app_sanitaria/domain/repositories/profile_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i3.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, String?>> getProfileImage(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfileImage,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String?>>.value(
            _FakeEither_0<_i5.Failure, String?>(
          this,
          Invocation.method(
            #getProfileImage,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> saveProfileImage(
    String? userId,
    String? imagePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProfileImage,
          [
            userId,
            imagePath,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #saveProfileImage,
            [
              userId,
              imagePath,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> deleteProfileImage(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProfileImage,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #deleteProfileImage,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PatientEntity>> updatePatientProfile(
          _i6.PatientEntity? patient) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePatientProfile,
          [patient],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.PatientEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.PatientEntity>(
          this,
          Invocation.method(
            #updatePatientProfile,
            [patient],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PatientEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.ProfessionalEntity>>
      updateProfessionalProfile(_i7.ProfessionalEntity? professional) =>
          (super.noSuchMethod(
            Invocation.method(
              #updateProfessionalProfile,
              [professional],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, _i7.ProfessionalEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.ProfessionalEntity>(
              this,
              Invocation.method(
                #updateProfessionalProfile,
                [professional],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i7.ProfessionalEntity>>);
}
