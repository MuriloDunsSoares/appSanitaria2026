// Mocks generated by Mockito 5.4.6 from annotations
// in app_sanitaria/test/domain/usecases/contracts/get_contracts_by_patient_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app_sanitaria/core/error/failures.dart' as _i5;
import 'package:app_sanitaria/domain/entities/contract_entity.dart' as _i6;
import 'package:app_sanitaria/domain/entities/contract_status.dart' as _i7;
import 'package:app_sanitaria/domain/repositories/contracts_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ContractsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockContractsRepository extends _i1.Mock
    implements _i3.ContractsRepository {
  MockContractsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>> createContract(
          _i6.ContractEntity? contract) =>
      (super.noSuchMethod(
        Invocation.method(
          #createContract,
          [contract],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ContractEntity>(
          this,
          Invocation.method(
            #createContract,
            [contract],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ContractEntity>>>
      getAllContracts() => (super.noSuchMethod(
            Invocation.method(
              #getAllContracts,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.ContractEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.ContractEntity>>(
              this,
              Invocation.method(
                #getAllContracts,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ContractEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, List<_i6.ContractEntity>>> getContractsByPatient(
          String? patientId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContractsByPatient,
          [patientId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.ContractEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.ContractEntity>>(
          this,
          Invocation.method(
            #getContractsByPatient,
            [patientId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ContractEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ContractEntity>>>
      getContractsByProfessional(String? professionalId) => (super.noSuchMethod(
            Invocation.method(
              #getContractsByProfessional,
              [professionalId],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.ContractEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.ContractEntity>>(
              this,
              Invocation.method(
                #getContractsByProfessional,
                [professionalId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ContractEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>> getContractById(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContractById,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ContractEntity>(
          this,
          Invocation.method(
            #getContractById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>> updateContract(
          _i6.ContractEntity? contract) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContract,
          [contract],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ContractEntity>(
          this,
          Invocation.method(
            #updateContract,
            [contract],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>> updateContractStatus(
    String? contractId,
    _i7.ContractStatus? newStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContractStatus,
          [
            contractId,
            newStatus,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ContractEntity>(
          this,
          Invocation.method(
            #updateContractStatus,
            [
              contractId,
              newStatus,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ContractEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> deleteContract(
          String? contractId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteContract,
          [contractId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #deleteContract,
            [contractId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
}
