// Mocks generated by Mockito 5.4.6 from annotations
// in app_sanitaria/test/domain/usecases/chat/mark_messages_as_read_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app_sanitaria/core/error/failures.dart' as _i5;
import 'package:app_sanitaria/domain/entities/conversation_entity.dart' as _i6;
import 'package:app_sanitaria/domain/entities/message_entity.dart' as _i7;
import 'package:app_sanitaria/domain/repositories/chat_repository.dart' as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i3.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ConversationEntity>>>
      getUserConversations(String? userId) => (super.noSuchMethod(
            Invocation.method(
              #getUserConversations,
              [userId],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i6.ConversationEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.ConversationEntity>>(
              this,
              Invocation.method(
                #getUserConversations,
                [userId],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i6.ConversationEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i6.ConversationEntity>> getConversationBetween(
    String? user1Id,
    String? user2Id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversationBetween,
          [
            user1Id,
            user2Id,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ConversationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ConversationEntity>(
          this,
          Invocation.method(
            #getConversationBetween,
            [
              user1Id,
              user2Id,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ConversationEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ConversationEntity>> saveConversation(
          _i6.ConversationEntity? conversation) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveConversation,
          [conversation],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ConversationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ConversationEntity>(
          this,
          Invocation.method(
            #saveConversation,
            [conversation],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ConversationEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.MessageEntity>>> getMessages({
    required String? userId1,
    required String? userId2,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessages,
          [],
          {
            #userId1: userId1,
            #userId2: userId2,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.MessageEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.MessageEntity>>(
          this,
          Invocation.method(
            #getMessages,
            [],
            {
              #userId1: userId1,
              #userId2: userId2,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.MessageEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.MessageEntity>> sendMessage({
    required String? senderId,
    required String? receiverId,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #senderId: senderId,
            #receiverId: receiverId,
            #content: content,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.MessageEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.MessageEntity>(
          this,
          Invocation.method(
            #sendMessage,
            [],
            {
              #senderId: senderId,
              #receiverId: receiverId,
              #content: content,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.MessageEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> markMessagesAsRead({
    required String? conversationId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markMessagesAsRead,
          [],
          {
            #conversationId: conversationId,
            #userId: userId,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #markMessagesAsRead,
            [],
            {
              #conversationId: conversationId,
              #userId: userId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getUnreadCount(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadCount,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getUnreadCount,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);
}
