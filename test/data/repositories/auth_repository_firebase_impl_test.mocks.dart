// Mocks generated by Mockito 5.4.6 from annotations
// in app_sanitaria/test/data/repositories/auth_repository_firebase_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:app_sanitaria/data/datasources/firebase_auth_datasource.dart'
    as _i5;
import 'package:app_sanitaria/domain/entities/patient_entity.dart' as _i3;
import 'package:app_sanitaria/domain/entities/professional_entity.dart' as _i4;
import 'package:app_sanitaria/domain/entities/user_entity.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeUserEntity_0 extends _i1.SmartFake implements _i2.UserEntity {
  _FakeUserEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePatientEntity_1 extends _i1.SmartFake implements _i3.PatientEntity {
  _FakePatientEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfessionalEntity_2 extends _i1.SmartFake
    implements _i4.ProfessionalEntity {
  _FakeProfessionalEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseAuthDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthDataSource extends _i1.Mock
    implements _i5.FirebaseAuthDataSource {
  MockFirebaseAuthDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.UserEntity> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i6.Future<_i2.UserEntity>.value(_FakeUserEntity_0(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i6.Future<_i2.UserEntity>);

  @override
  _i6.Future<_i3.PatientEntity> registerPatient(_i3.PatientEntity? patient) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerPatient,
          [patient],
        ),
        returnValue: _i6.Future<_i3.PatientEntity>.value(_FakePatientEntity_1(
          this,
          Invocation.method(
            #registerPatient,
            [patient],
          ),
        )),
      ) as _i6.Future<_i3.PatientEntity>);

  @override
  _i6.Future<_i4.ProfessionalEntity> registerProfessional(
          _i4.ProfessionalEntity? professional) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerProfessional,
          [professional],
        ),
        returnValue:
            _i6.Future<_i4.ProfessionalEntity>.value(_FakeProfessionalEntity_2(
          this,
          Invocation.method(
            #registerProfessional,
            [professional],
          ),
        )),
      ) as _i6.Future<_i4.ProfessionalEntity>);

  @override
  _i6.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.UserEntity?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i6.Future<_i2.UserEntity?>.value(),
      ) as _i6.Future<_i2.UserEntity?>);

  @override
  _i6.Future<bool> isAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}
