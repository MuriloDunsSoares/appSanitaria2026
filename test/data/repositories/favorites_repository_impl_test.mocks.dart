// Mocks generated by Mockito 5.4.6 from annotations
// in app_sanitaria/test/data/repositories/favorites_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:app_sanitaria/data/datasources/firebase_favorites_datasource.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [FirebaseFavoritesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFavoritesDataSource extends _i1.Mock
    implements _i2.FirebaseFavoritesDataSource {
  MockFirebaseFavoritesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<String>> getFavorites(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [userId],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<void> addFavorite(
    String? userId,
    String? professionalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [
            userId,
            professionalId,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeFavorite(
    String? userId,
    String? professionalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [
            userId,
            professionalId,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isFavorite(
    String? userId,
    String? professionalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [
            userId,
            professionalId,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> clearAllFavorites(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearAllFavorites,
          [userId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
