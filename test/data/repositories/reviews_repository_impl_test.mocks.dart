// Mocks generated by Mockito 5.4.6 from annotations
// in app_sanitaria/test/data/repositories/reviews_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app_sanitaria/data/datasources/firebase_reviews_datasource.dart'
    as _i3;
import 'package:app_sanitaria/domain/entities/review_entity.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeReviewEntity_0 extends _i1.SmartFake implements _i2.ReviewEntity {
  _FakeReviewEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseReviewsDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseReviewsDataSource extends _i1.Mock
    implements _i3.FirebaseReviewsDataSource {
  MockFirebaseReviewsDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ReviewEntity> addReview(_i2.ReviewEntity? review) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReview,
          [review],
        ),
        returnValue: _i4.Future<_i2.ReviewEntity>.value(_FakeReviewEntity_0(
          this,
          Invocation.method(
            #addReview,
            [review],
          ),
        )),
      ) as _i4.Future<_i2.ReviewEntity>);

  @override
  _i4.Future<List<_i2.ReviewEntity>> getReviewsByProfessional(
          String? professionalId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewsByProfessional,
          [professionalId],
        ),
        returnValue:
            _i4.Future<List<_i2.ReviewEntity>>.value(<_i2.ReviewEntity>[]),
      ) as _i4.Future<List<_i2.ReviewEntity>>);

  @override
  _i4.Future<double> getAverageRating(String? professionalId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAverageRating,
          [professionalId],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);

  @override
  _i4.Future<void> deleteReview(String? reviewId) => (super.noSuchMethod(
        Invocation.method(
          #deleteReview,
          [reviewId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
