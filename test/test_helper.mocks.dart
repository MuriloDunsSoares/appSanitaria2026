// Mocks generated by Mockito 5.4.6 from annotations
// in app_sanitaria/test/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app_sanitaria/core/error/failures.dart' as _i5;
import 'package:app_sanitaria/domain/entities/contract_entity.dart' as _i13;
import 'package:app_sanitaria/domain/entities/contract_status.dart' as _i14;
import 'package:app_sanitaria/domain/entities/conversation_entity.dart' as _i10;
import 'package:app_sanitaria/domain/entities/message_entity.dart' as _i11;
import 'package:app_sanitaria/domain/entities/patient_entity.dart' as _i7;
import 'package:app_sanitaria/domain/entities/professional_entity.dart' as _i8;
import 'package:app_sanitaria/domain/entities/review_entity.dart' as _i20;
import 'package:app_sanitaria/domain/entities/speciality.dart' as _i17;
import 'package:app_sanitaria/domain/entities/user_entity.dart' as _i6;
import 'package:app_sanitaria/domain/repositories/auth_repository.dart' as _i3;
import 'package:app_sanitaria/domain/repositories/chat_repository.dart' as _i9;
import 'package:app_sanitaria/domain/repositories/contracts_repository.dart'
    as _i12;
import 'package:app_sanitaria/domain/repositories/favorites_repository.dart'
    as _i15;
import 'package:app_sanitaria/domain/repositories/professionals_repository.dart'
    as _i16;
import 'package:app_sanitaria/domain/repositories/profile_repository.dart'
    as _i18;
import 'package:app_sanitaria/domain/repositories/reviews_repository.dart'
    as _i19;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.PatientEntity>> registerPatient(
          _i7.PatientEntity? patient) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerPatient,
          [patient],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.PatientEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.PatientEntity>(
          this,
          Invocation.method(
            #registerPatient,
            [patient],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.PatientEntity>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i8.ProfessionalEntity>> registerProfessional(
          _i8.ProfessionalEntity? professional) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerProfessional,
          [professional],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i8.ProfessionalEntity>>.value(
                _FakeEither_0<_i5.Failure, _i8.ProfessionalEntity>(
          this,
          Invocation.method(
            #registerProfessional,
            [professional],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.ProfessionalEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> getCurrentUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> isAuthenticated() =>
      (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #isAuthenticated,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> setKeepLoggedIn(bool? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setKeepLoggedIn,
          [value],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #setKeepLoggedIn,
            [value],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> getKeepLoggedIn() =>
      (super.noSuchMethod(
        Invocation.method(
          #getKeepLoggedIn,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #getKeepLoggedIn,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i9.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i10.ConversationEntity>>>
      getUserConversations(String? userId) => (super.noSuchMethod(
            Invocation.method(
              #getUserConversations,
              [userId],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i10.ConversationEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i10.ConversationEntity>>(
              this,
              Invocation.method(
                #getUserConversations,
                [userId],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i10.ConversationEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i10.ConversationEntity>> getConversationBetween(
    String? user1Id,
    String? user2Id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversationBetween,
          [
            user1Id,
            user2Id,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.ConversationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.ConversationEntity>(
          this,
          Invocation.method(
            #getConversationBetween,
            [
              user1Id,
              user2Id,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.ConversationEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.ConversationEntity>> saveConversation(
          _i10.ConversationEntity? conversation) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveConversation,
          [conversation],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.ConversationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.ConversationEntity>(
          this,
          Invocation.method(
            #saveConversation,
            [conversation],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.ConversationEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i11.MessageEntity>>> getMessages({
    required String? userId1,
    required String? userId2,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessages,
          [],
          {
            #userId1: userId1,
            #userId2: userId2,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i11.MessageEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i11.MessageEntity>>(
          this,
          Invocation.method(
            #getMessages,
            [],
            {
              #userId1: userId1,
              #userId2: userId2,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i11.MessageEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i11.MessageEntity>> sendMessage({
    required String? senderId,
    required String? receiverId,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #senderId: senderId,
            #receiverId: receiverId,
            #content: content,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i11.MessageEntity>>.value(
                _FakeEither_0<_i5.Failure, _i11.MessageEntity>(
          this,
          Invocation.method(
            #sendMessage,
            [],
            {
              #senderId: senderId,
              #receiverId: receiverId,
              #content: content,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i11.MessageEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> markMessagesAsRead({
    required String? conversationId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markMessagesAsRead,
          [],
          {
            #conversationId: conversationId,
            #userId: userId,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #markMessagesAsRead,
            [],
            {
              #conversationId: conversationId,
              #userId: userId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getUnreadCount(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadCount,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getUnreadCount,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);
}

/// A class which mocks [ContractsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockContractsRepository extends _i1.Mock
    implements _i12.ContractsRepository {
  MockContractsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>> createContract(
          _i13.ContractEntity? contract) =>
      (super.noSuchMethod(
        Invocation.method(
          #createContract,
          [contract],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>>.value(
                _FakeEither_0<_i5.Failure, _i13.ContractEntity>(
          this,
          Invocation.method(
            #createContract,
            [contract],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i13.ContractEntity>>>
      getAllContracts() => (super.noSuchMethod(
            Invocation.method(
              #getAllContracts,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i13.ContractEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i13.ContractEntity>>(
              this,
              Invocation.method(
                #getAllContracts,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i13.ContractEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i13.ContractEntity>>>
      getContractsByPatient(String? patientId) => (super.noSuchMethod(
            Invocation.method(
              #getContractsByPatient,
              [patientId],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i13.ContractEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i13.ContractEntity>>(
              this,
              Invocation.method(
                #getContractsByPatient,
                [patientId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i13.ContractEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i13.ContractEntity>>>
      getContractsByProfessional(String? professionalId) => (super.noSuchMethod(
            Invocation.method(
              #getContractsByProfessional,
              [professionalId],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i13.ContractEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i13.ContractEntity>>(
              this,
              Invocation.method(
                #getContractsByProfessional,
                [professionalId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i13.ContractEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>> getContractById(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContractById,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>>.value(
                _FakeEither_0<_i5.Failure, _i13.ContractEntity>(
          this,
          Invocation.method(
            #getContractById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>> updateContract(
          _i13.ContractEntity? contract) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContract,
          [contract],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>>.value(
                _FakeEither_0<_i5.Failure, _i13.ContractEntity>(
          this,
          Invocation.method(
            #updateContract,
            [contract],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>> updateContractStatus(
    String? contractId,
    _i14.ContractStatus? newStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContractStatus,
          [
            contractId,
            newStatus,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>>.value(
                _FakeEither_0<_i5.Failure, _i13.ContractEntity>(
          this,
          Invocation.method(
            #updateContractStatus,
            [
              contractId,
              newStatus,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i13.ContractEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> deleteContract(
          String? contractId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteContract,
          [contractId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #deleteContract,
            [contractId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
}

/// A class which mocks [FavoritesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoritesRepository extends _i1.Mock
    implements _i15.FavoritesRepository {
  MockFavoritesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<String>>> getFavorites(
          String? patientId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [patientId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<String>>>.value(
            _FakeEither_0<_i5.Failure, List<String>>(
          this,
          Invocation.method(
            #getFavorites,
            [patientId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> addFavorite(
    String? patientId,
    String? professionalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [
            patientId,
            professionalId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #addFavorite,
            [
              patientId,
              professionalId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> removeFavorite(
    String? patientId,
    String? professionalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [
            patientId,
            professionalId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #removeFavorite,
            [
              patientId,
              professionalId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> isFavorite(
    String? patientId,
    String? professionalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [
            patientId,
            professionalId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #isFavorite,
            [
              patientId,
              professionalId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> toggleFavorite(
    String? patientId,
    String? professionalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleFavorite,
          [
            patientId,
            professionalId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #toggleFavorite,
            [
              patientId,
              professionalId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [ProfessionalsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfessionalsRepository extends _i1.Mock
    implements _i16.ProfessionalsRepository {
  MockProfessionalsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>
      getAllProfessionals() => (super.noSuchMethod(
            Invocation.method(
              #getAllProfessionals,
              [],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i8.ProfessionalEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.ProfessionalEntity>>(
              this,
              Invocation.method(
                #getAllProfessionals,
                [],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>
      searchProfessionals({
    String? searchQuery,
    _i17.Speciality? speciality,
    String? city,
    double? minRating,
    double? maxPrice,
    double? minPrice,
    int? minExperience,
    bool? availableNow,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #searchProfessionals,
              [],
              {
                #searchQuery: searchQuery,
                #speciality: speciality,
                #city: city,
                #minRating: minRating,
                #maxPrice: maxPrice,
                #minPrice: minPrice,
                #minExperience: minExperience,
                #availableNow: availableNow,
              },
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i8.ProfessionalEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.ProfessionalEntity>>(
              this,
              Invocation.method(
                #searchProfessionals,
                [],
                {
                  #searchQuery: searchQuery,
                  #speciality: speciality,
                  #city: city,
                  #minRating: minRating,
                  #maxPrice: maxPrice,
                  #minPrice: minPrice,
                  #minExperience: minExperience,
                  #availableNow: availableNow,
                },
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.ProfessionalEntity>>
      getProfessionalById(String? id) => (super.noSuchMethod(
            Invocation.method(
              #getProfessionalById,
              [id],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, _i8.ProfessionalEntity>>.value(
                _FakeEither_0<_i5.Failure, _i8.ProfessionalEntity>(
              this,
              Invocation.method(
                #getProfessionalById,
                [id],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i8.ProfessionalEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>
      getProfessionalsBySpeciality(_i17.Speciality? speciality) =>
          (super.noSuchMethod(
            Invocation.method(
              #getProfessionalsBySpeciality,
              [speciality],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i8.ProfessionalEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.ProfessionalEntity>>(
              this,
              Invocation.method(
                #getProfessionalsBySpeciality,
                [speciality],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>
      getProfessionalsByCity(String? city) => (super.noSuchMethod(
            Invocation.method(
              #getProfessionalsByCity,
              [city],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i8.ProfessionalEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.ProfessionalEntity>>(
              this,
              Invocation.method(
                #getProfessionalsByCity,
                [city],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>
      getProfessionalsByIds(List<String>? ids) => (super.noSuchMethod(
            Invocation.method(
              #getProfessionalsByIds,
              [ids],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i8.ProfessionalEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.ProfessionalEntity>>(
              this,
              Invocation.method(
                #getProfessionalsByIds,
                [ids],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i8.ProfessionalEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> updateProfessional(
          _i8.ProfessionalEntity? professional) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfessional,
          [professional],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #updateProfessional,
            [professional],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i18.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, String?>> getProfileImage(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfileImage,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String?>>.value(
            _FakeEither_0<_i5.Failure, String?>(
          this,
          Invocation.method(
            #getProfileImage,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> saveProfileImage(
    String? userId,
    String? imagePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProfileImage,
          [
            userId,
            imagePath,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #saveProfileImage,
            [
              userId,
              imagePath,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> deleteProfileImage(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProfileImage,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #deleteProfileImage,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.PatientEntity>> updatePatientProfile(
          _i7.PatientEntity? patient) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePatientProfile,
          [patient],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.PatientEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.PatientEntity>(
          this,
          Invocation.method(
            #updatePatientProfile,
            [patient],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.PatientEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.ProfessionalEntity>>
      updateProfessionalProfile(_i8.ProfessionalEntity? professional) =>
          (super.noSuchMethod(
            Invocation.method(
              #updateProfessionalProfile,
              [professional],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, _i8.ProfessionalEntity>>.value(
                _FakeEither_0<_i5.Failure, _i8.ProfessionalEntity>(
              this,
              Invocation.method(
                #updateProfessionalProfile,
                [professional],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i8.ProfessionalEntity>>);
}

/// A class which mocks [ReviewsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockReviewsRepository extends _i1.Mock implements _i19.ReviewsRepository {
  MockReviewsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i20.ReviewEntity>>>
      getReviewsByProfessional(String? professionalId) => (super.noSuchMethod(
            Invocation.method(
              #getReviewsByProfessional,
              [professionalId],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i20.ReviewEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i20.ReviewEntity>>(
              this,
              Invocation.method(
                #getReviewsByProfessional,
                [professionalId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i20.ReviewEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i20.ReviewEntity>> addReview(
          _i20.ReviewEntity? review) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReview,
          [review],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i20.ReviewEntity>>.value(
                _FakeEither_0<_i5.Failure, _i20.ReviewEntity>(
          this,
          Invocation.method(
            #addReview,
            [review],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i20.ReviewEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> deleteReview(
          String? reviewId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReview,
          [reviewId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #deleteReview,
            [reviewId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, double>> getAverageRating(
          String? professionalId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAverageRating,
          [professionalId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, double>>.value(
            _FakeEither_0<_i5.Failure, double>(
          this,
          Invocation.method(
            #getAverageRating,
            [professionalId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, double>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getReviewsCount(
          String? professionalId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewsCount,
          [professionalId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getReviewsCount,
            [professionalId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);
}
